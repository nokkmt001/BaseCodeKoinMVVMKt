apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

apply from: '../dependencies.gradle'

android {
    compileSdkVersion versions.compileSdk
    defaultConfig {
        applicationId "com.phat.testbase"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.versionCode
        versionName versions.versionName
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
    }
    buildFeatures {
        dataBinding true
    }
    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
        test.assets.srcDirs += files("$projectDir/schemas".toString())
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions.freeCompilerArgs += ["-Xopt-in=kotlin.time.ExperimentalTime"]
        kotlinOptions.freeCompilerArgs += ["-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"]
    }
}

dependencies {
    // material
    implementation "com.google.android.material:material:$versions.materialVersion"

    // architecture components
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleVersion"
    implementation "androidx.room:room-runtime:$versions.roomVersion"
    implementation "androidx.room:room-ktx:$versions.roomVersion"
    kapt "androidx.room:room-compiler:$versions.roomVersion"
    testImplementation "androidx.arch.core:core-testing:$versions.archCompomentVersion"

    // binding
    implementation "com.github.skydoves:bindables:$versions.bindablesVersion"

    // koin
    implementation "org.koin:koin-android:$versions.koinVersion"
    implementation "org.koin:koin-android-scope:$versions.koinVersion"
    implementation "org.koin:koin-android-viewmodel:$versions.koinVersion"

    // network
    implementation "com.github.skydoves:sandwich:$versions.sandwichVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttpVersion"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofitVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okhttpVersion"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutinesVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    // glide
    implementation "com.github.bumptech.glide:glide:$versions.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$versions.glideVersion"

    // adapter
    implementation "com.github.skydoves:baserecyclerviewadapter:$versions.baseAdapter"

    // whatIf
    implementation "com.github.skydoves:whatif:$versions.whatIfVersion"

    // bundler
    implementation "com.github.skydoves:bundler:$versions.bundlerVersion"

    // android bottom navigation
    implementation "com.github.skydoves:androidbottombar:$versions.androidBottomBarVersion"

    // debugging
    implementation "com.jakewharton.timber:timber:$versions.timberVersion"

    // unit test
    testImplementation "junit:junit:$versions.junitVersion"
    testImplementation "androidx.test:core:$versions.androidxTest"
    testImplementation "org.robolectric:robolectric:$versions.robolectricVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockitoKotlinVersion"
    testImplementation "org.mockito:mockito-inline:$versions.mockitoInlineVersion"

    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'androidx.core:core-ktx:1.1.0'

    implementation("androidx.paging:paging-runtime-ktx:3.1.1")
    implementation 'com.squareup.retrofit2:converter-moshi:2.7.0'

    // rx
    androidTestImplementation 'io.reactivex.rxjava2:rxjava:2.1.16'
    androidTestImplementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    kaptAndroidTest 'io.realm:realm-annotations:5.8.0'
    kaptAndroidTest 'io.realm:realm-annotations-processor:5.8.0'
    // reaml
    compileOnly 'io.reactivex.rxjava2:rxjava:2.1.16'
    compileOnly 'io.reactivex.rxjava2:rxandroid:2.0.2'

    implementation 'com.orhanobut:hawk:2.0.1'
    // scan
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'com.journeyapps:zxing-android-embedded:3.2.0@aar'
    implementation 'me.dm7.barcodescanner:zbar:1.9.13'

    def camerax_version = '1.0.0-alpha03'
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"

    // firebase
    implementation 'com.google.firebase:firebase-ml-vision:21.0.0'
    implementation 'com.google.firebase:firebase-ml-vision-barcode-model:16.0.2'
    implementation project(':imagepicker')

}

apply from: '../spotless.gradle'
